generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Issue {
  id               Int       @id @default(autoincrement())
  title            String    @db.VarChar(255)
  description      String
  status           Status    @default(OPEN)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  assignedToUserId String?   @db.VarChar(255)
  history          History[]
  assignedToUser   User?     @relation(fields: [assignedToUserId], references: [id])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  history        History[]
  assignedIssues Issue[]
  sessions       Session[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model History {
  id        Int      @id @default(autoincrement())
  issueId   Int
  userId    String
  type      Event
  createdAt DateTime @default(now())
  field     String?
  newValue  String?
  oldValue  String?
  issue     Issue    @relation(fields: [issueId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

enum Event {
  CREATED
  UPDATED
  DELETED
}
